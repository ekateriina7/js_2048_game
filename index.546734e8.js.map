{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_define_property.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : Game.INITIAL_STATE;\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        this.initialState = initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n        });\n        this.state = initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n        });\n        this.status = \"idle\";\n        this.score = 0;\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                this.moveHorizontal(false);\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                this.moveHorizontal(true);\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                this.moveVertical(false);\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                this.moveVertical(true);\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {\n                this.setBoard();\n                this.setStatus(\"playing\");\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                // this.initialState = [...Game.INITIAL_STATE.map((row) => [...row])];\n                this.state = this.initialState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n                });\n                this.status = \"idle\";\n                this.score = 0;\n            }\n        },\n        {\n            // Add your own methods here\n            key: \"setBoard\",\n            value: function setBoard() {\n                this.addRandomNumber();\n                this.addRandomNumber();\n            }\n        },\n        {\n            key: \"setScore\",\n            value: function setScore(newScore) {\n                this.score += newScore;\n            }\n        },\n        {\n            key: \"setStatus\",\n            value: function setStatus(newStatus) {\n                this.status = newStatus;\n            }\n        },\n        {\n            key: \"setState\",\n            value: function setState(newState) {\n                this.state = newState;\n            }\n        },\n        {\n            key: \"addRandomNumber\",\n            value: function addRandomNumber() {\n                var row = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null, col = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, number = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;\n                var emptyCells = [];\n                for(var i = 0; i < 4; i++){\n                    for(var j = 0; j < 4; j++)if (this.state[i][j] === 0) emptyCells.push({\n                        row: i,\n                        col: j\n                    });\n                }\n                if (emptyCells.length) {\n                    var index = Math.floor(Math.random() * emptyCells.length);\n                    var randomCellCoordinate = emptyCells[index];\n                    var targetRow = row !== null ? row : randomCellCoordinate.row;\n                    var targetCol = col !== null ? col : randomCellCoordinate.col;\n                    var targetNumber = number !== null ? number : Math.random() < 0.9 ? 2 : 4;\n                    this.state[targetRow][targetCol] = targetNumber;\n                }\n            }\n        },\n        {\n            key: \"combine\",\n            value: function combine(cells) {\n                var combined = [];\n                var scoreToAdd = 0;\n                var skip = false;\n                for(var i = 0; i < cells.length; i++){\n                    if (skip) {\n                        skip = false;\n                        continue;\n                    }\n                    if (cells[i] !== 0) {\n                        if (cells[i] === cells[i + 1]) {\n                            combined.push(cells[i] * 2);\n                            scoreToAdd += cells[i] * 2;\n                            skip = true;\n                        } else combined.push(cells[i]);\n                    }\n                }\n                while(combined.length < 4)combined.push(0);\n                this.setScore(scoreToAdd);\n                return combined;\n            }\n        },\n        {\n            key: \"moveHorizontal\",\n            value: function moveHorizontal() {\n                var right = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n                if (this.status !== \"playing\") return;\n                var moved = false;\n                for(var i = 0; i < 4; i++){\n                    var row = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(this.state[i]);\n                    if (right) row.reverse();\n                    var newRow = this.combine(row);\n                    if (right) newRow.reverse();\n                    if (this.state[i].toString() !== newRow.toString()) moved = true;\n                    this.state[i] = newRow;\n                }\n                if (moved) {\n                    this.addRandomNumber();\n                    if (this.checkWin()) this.setStatus(\"win\");\n                    else if (this.checkLose()) this.setStatus(\"lose\");\n                }\n            }\n        },\n        {\n            key: \"moveVertical\",\n            value: function moveVertical() {\n                var down = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n                if (this.status !== \"playing\") return;\n                var moved = false;\n                for(var i = 0; i < 4; i++){\n                    var col = [];\n                    for(var j = 0; j < 4; j++)col.push(this.state[j][i]);\n                    if (down) col.reverse();\n                    var newCol = this.combine(col);\n                    if (down) newCol.reverse();\n                    for(var j1 = 0; j1 < 4; j1++){\n                        if (this.state[j1][i] !== newCol[j1]) moved = true;\n                        this.state[j1][i] = newCol[j1];\n                    }\n                }\n                if (moved) {\n                    this.addRandomNumber();\n                    if (this.checkWin()) this.setStatus(\"win\");\n                    else if (this.checkLose()) this.setStatus(\"lose\");\n                }\n            }\n        },\n        {\n            key: \"checkWin\",\n            value: function checkWin() {\n                for(var i = 0; i < 4; i++)for(var j = 0; j < 4; j++){\n                    if (this.state[i][j] === 2048) return true;\n                }\n                return false;\n            }\n        },\n        {\n            key: \"checkLose\",\n            value: function checkLose() {\n                for(var i = 0; i < 4; i++)for(var j = 0; j < 4; j++){\n                    if (this.state[i][j] === 0) return false;\n                    if (j < 3 && this.state[i][j] === this.state[i][j + 1]) return false;\n                    if (i < 3 && this.state[i][j] === this.state[i + 1][j]) return false;\n                }\n                return true;\n            }\n        }\n    ]);\n    return Game;\n}();\n/**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */ (0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)($3d28d7f1aac198f5$var$Game, \"INITIAL_STATE\", [\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ]\n]);\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$startButton = document.querySelector(\".button.start\");\nvar $197cd56b15c33885$var$messageContainer = document.querySelector(\".message-container\");\nvar $197cd56b15c33885$var$gameScore = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$showCurrentBoard = function() {\n    var state = $197cd56b15c33885$var$game.getState();\n    var rows = document.querySelectorAll(\".field-row\");\n    for(var i = 0; i < state.length; i++){\n        var row = state[i];\n        var cells = rows[i].querySelectorAll(\".field-cell\");\n        for(var j = 0; j < row.length; j++){\n            var cell = row[j];\n            var cellElement = cells[j];\n            if (cell) {\n                cellElement.innerHTML = cell;\n                cellElement.className = \"field-cell field-cell--\".concat(cell);\n            } else {\n                cellElement.innerHTML = \"\";\n                cellElement.className = \"field-cell\";\n            }\n        }\n    }\n};\nvar $197cd56b15c33885$var$showMessage = function() {\n    var newStatus = $197cd56b15c33885$var$game.getStatus();\n    var message = \"\";\n    var messageClass = \"\";\n    if (newStatus === \"idle\") {\n        message = 'Press \"Start\" to begin game. Good luck!';\n        messageClass = \"message-start\";\n    } else if (newStatus === \"playing\") {\n        message = \"\";\n        messageClass = \"hidden\";\n    } else if (newStatus === \"win\") {\n        message = \"Winner! Congrats! You did it!\";\n        messageClass = \"message-win\";\n    } else if (newStatus === \"lose\") {\n        message = \"You lose! Restart the game?\";\n        messageClass = \"message-lose\";\n    }\n    $197cd56b15c33885$var$messageContainer.innerHTML = '<p class=\"message '.concat(messageClass, '\">').concat(message, \"</p>\");\n};\nvar $197cd56b15c33885$var$showScore = function() {\n    $197cd56b15c33885$var$gameScore.innerHTML = $197cd56b15c33885$var$game.getScore();\n};\nvar $197cd56b15c33885$var$startGame = function() {\n    if ($197cd56b15c33885$var$game.getStatus() === \"idle\") $197cd56b15c33885$var$game.start();\n    else {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$game.start();\n    }\n    $197cd56b15c33885$var$showCurrentBoard();\n    $197cd56b15c33885$var$showScore();\n    $197cd56b15c33885$var$showMessage();\n    $197cd56b15c33885$var$startButton.textContent = \"Restart\";\n    $197cd56b15c33885$var$startButton.className = \"button restart\";\n};\n$197cd56b15c33885$var$startButton.addEventListener(\"click\", $197cd56b15c33885$var$startGame);\nvar $197cd56b15c33885$var$makeMove = function(e) {\n    switch(e.key){\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        default:\n            return;\n    }\n    $197cd56b15c33885$var$showScore();\n    $197cd56b15c33885$var$showMessage();\n    $197cd56b15c33885$var$showCurrentBoard();\n};\ndocument.addEventListener(\"keydown\", $197cd56b15c33885$var$makeMove);\n\n})();\n//# sourceMappingURL=index.546734e8.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst startButton = document.querySelector('.button.start');\nconst messageContainer = document.querySelector('.message-container');\nconst gameScore = document.querySelector('.game-score');\n\nconst showCurrentBoard = () => {\n  const state = game.getState();\n  const rows = document.querySelectorAll('.field-row');\n\n  for (let i = 0; i < state.length; i++) {\n    const row = state[i];\n    const cells = rows[i].querySelectorAll('.field-cell');\n\n    for (let j = 0; j < row.length; j++) {\n      const cell = row[j];\n      const cellElement = cells[j];\n\n      if (cell) {\n        cellElement.innerHTML = cell;\n        cellElement.className = `field-cell field-cell--${cell}`;\n      } else {\n        cellElement.innerHTML = '';\n        cellElement.className = 'field-cell';\n      }\n    }\n  }\n};\n\nconst showMessage = () => {\n  const newStatus = game.getStatus();\n  let message = '';\n  let messageClass = '';\n\n  if (newStatus === 'idle') {\n    message = 'Press \"Start\" to begin game. Good luck!';\n    messageClass = 'message-start';\n  } else if (newStatus === 'playing') {\n    message = '';\n    messageClass = 'hidden';\n  } else if (newStatus === 'win') {\n    message = 'Winner! Congrats! You did it!';\n    messageClass = 'message-win';\n  } else if (newStatus === 'lose') {\n    message = 'You lose! Restart the game?';\n    messageClass = 'message-lose';\n  }\n\n  messageContainer.innerHTML = `<p class=\"message ${messageClass}\">${message}</p>`;\n};\n\nconst showScore = () => {\n  gameScore.innerHTML = game.getScore();\n};\n\nconst startGame = () => {\n  if (game.getStatus() === 'idle') {\n    game.start();\n  } else {\n    game.restart();\n    game.start();\n  }\n  showCurrentBoard();\n  showScore();\n  showMessage();\n  startButton.textContent = 'Restart';\n  startButton.className = 'button restart';\n};\n\nstartButton.addEventListener('click', startGame);\n\nconst makeMove = (e) => {\n  switch (e.key) {\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n    default:\n      return;\n  }\n\n  showScore();\n  showMessage();\n  showCurrentBoard();\n};\n\ndocument.addEventListener('keydown', makeMove);\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n\n  static INITIAL_STATE = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  constructor(initialState = Game.INITIAL_STATE) {\n    this.initialState = initialState.map((row) => [...row]);\n    this.state = initialState.map((row) => [...row]);\n    this.status = 'idle';\n    this.score = 0;\n  }\n\n  moveLeft() {\n    this.moveHorizontal(false);\n  }\n\n  moveRight() {\n    this.moveHorizontal(true);\n  }\n\n  moveUp() {\n    this.moveVertical(false);\n  }\n\n  moveDown() {\n    this.moveVertical(true);\n  }\n\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    return this.score;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    return this.status;\n  }\n\n  /**\n   * Starts the game.\n   */\n  start() {\n    this.setBoard();\n    this.setStatus('playing');\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    // this.initialState = [...Game.INITIAL_STATE.map((row) => [...row])];\n    this.state = this.initialState.map((row) => [...row]);\n    this.status = 'idle';\n    this.score = 0;\n  }\n\n  // Add your own methods here\n  setBoard() {\n    this.addRandomNumber();\n    this.addRandomNumber();\n  }\n\n  setScore(newScore) {\n    this.score += newScore;\n  }\n\n  setStatus(newStatus) {\n    this.status = newStatus;\n  }\n\n  setState(newState) {\n    this.state = newState;\n  }\n\n  addRandomNumber(row = null, col = null, number = null) {\n    const emptyCells = [];\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.state[i][j] === 0) {\n          emptyCells.push({ row: i, col: j });\n        }\n      }\n    }\n\n    if (emptyCells.length) {\n      const index = Math.floor(Math.random() * emptyCells.length);\n      const randomCellCoordinate = emptyCells[index];\n      const targetRow = row !== null ? row : randomCellCoordinate.row;\n      const targetCol = col !== null ? col : randomCellCoordinate.col;\n      const targetNumber =\n        number !== null ? number : Math.random() < 0.9 ? 2 : 4;\n\n      this.state[targetRow][targetCol] = targetNumber;\n    }\n  }\n\n  combine(cells) {\n    const combined = [];\n    let scoreToAdd = 0;\n    let skip = false;\n\n    for (let i = 0; i < cells.length; i++) {\n      if (skip) {\n        skip = false;\n        continue;\n      }\n\n      if (cells[i] !== 0) {\n        if (cells[i] === cells[i + 1]) {\n          combined.push(cells[i] * 2);\n          scoreToAdd += cells[i] * 2;\n          skip = true;\n        } else {\n          combined.push(cells[i]);\n        }\n      }\n    }\n\n    while (combined.length < 4) {\n      combined.push(0);\n    }\n\n    this.setScore(scoreToAdd);\n\n    return combined;\n  }\n\n  moveHorizontal(right = false) {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let moved = false;\n\n    for (let i = 0; i < 4; i++) {\n      const row = [...this.state[i]];\n\n      if (right) {\n        row.reverse();\n      }\n\n      const newRow = this.combine(row);\n\n      if (right) {\n        newRow.reverse();\n      }\n\n      if (this.state[i].toString() !== newRow.toString()) {\n        moved = true;\n      }\n      this.state[i] = newRow;\n    }\n\n    if (moved) {\n      this.addRandomNumber();\n\n      if (this.checkWin()) {\n        this.setStatus('win');\n      } else if (this.checkLose()) {\n        this.setStatus('lose');\n      }\n    }\n  }\n\n  moveVertical(down = false) {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let moved = false;\n\n    for (let i = 0; i < 4; i++) {\n      const col = [];\n\n      for (let j = 0; j < 4; j++) {\n        col.push(this.state[j][i]);\n      }\n\n      if (down) {\n        col.reverse();\n      }\n\n      const newCol = this.combine(col);\n\n      if (down) {\n        newCol.reverse();\n      }\n\n      for (let j = 0; j < 4; j++) {\n        if (this.state[j][i] !== newCol[j]) {\n          moved = true;\n        }\n        this.state[j][i] = newCol[j];\n      }\n    }\n\n    if (moved) {\n      this.addRandomNumber();\n\n      if (this.checkWin()) {\n        this.setStatus('win');\n      } else if (this.checkLose()) {\n        this.setStatus('lose');\n      }\n    }\n  }\n\n  checkWin() {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.state[i][j] === 2048) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  checkLose() {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.state[i][j] === 0) {\n          return false;\n        }\n\n        if (j < 3 && this.state[i][j] === this.state[i][j + 1]) {\n          return false;\n        }\n\n        if (i < 3 && this.state[i][j] === this.state[i + 1][j]) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n}\n\nmodule.exports = Game;\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","export function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$c3b10a83b523f372$export$79e617b1955a2616","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$1b5e630bc3aea29f","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","key","value","$3d28d7f1aac198f5$var$Game","protoProps","Game","initialState","arguments","INITIAL_STATE","instance","Constructor","map","row","state","status","score","moveHorizontal","moveVertical","setBoard","setStatus","addRandomNumber","newScore","newStatus","newState","col","number","emptyCells","j","push","index","Math","floor","random","randomCellCoordinate","targetRow","targetCol","cells","combined","scoreToAdd","skip","setScore","right","moved","reverse","newRow","combine","checkWin","checkLose","down","newCol","j1","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","obj","$197cd56b15c33885$var$game","$197cd56b15c33885$var$startButton","document","querySelector","$197cd56b15c33885$var$messageContainer","$197cd56b15c33885$var$gameScore","$197cd56b15c33885$var$showCurrentBoard","getState","rows","querySelectorAll","cell","cellElement","innerHTML","className","concat","$197cd56b15c33885$var$showMessage","getStatus","message","messageClass","$197cd56b15c33885$var$showScore","getScore","addEventListener","restart","start","textContent","e","moveLeft","moveRight","moveUp","moveDown"],"version":3,"file":"index.546734e8.js.map"}